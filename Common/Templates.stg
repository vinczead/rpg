world(w) ::= <<
<w.textures.values:texture()>
<w.models.values:model()><\\>
<w.tiles.values:tile()>
<w.breeds.values:breed()><\\>
<w.regions.values:region(w)><\\>
<w.player:player()>
>>

texture(t) ::= <<
texture <t.id> from "<t.fileName>"<\n>
>>

model(m) ::= <<
model <m.id> from <m.spriteSheet.id>
    frame size <m.frameSize.X>, <m.frameSize.Y> 
    collision <m.collisionBox.X>, <m.collisionBox.Y>, <m.collisionBox.Width>, <m.collisionBox.Height>
    <m.animations:animation()><\\>
end<\n><\n>
>>

animation(a) ::= <<
animation <a.id> <if(a.isLooping)>looping<endif>
    <a.frames:frame()><\\>
end<\n>
>>

frame(f) ::= <<
frame <f.source.X>, <f.source.Y>, <f.timeSpan.totalMilliseconds><\n>
>>

tile(t) ::= <<
tile <t.id> from <t.model.id><if(t.isWalkable)> walkable<endif><\n>
>>

typeMap ::= [
    "Common.Models.Thing": "Thing",
    "Common.Models.Creature": "Creature",
    "Common.Models.Character": "Character",
    "Common.Models.Item": "Item",
    "Common.Models.Consumable": "Consumable"
]

propMap ::= [
    "Name":"",
    "Model":"",
    "MaxHealth":"",
    "MaxMana":"",
    "Strength":"",
    "Dexterity":"",
    "Speed":"",
    "Intelligence":"",
    "Protection":"",
    "Value":"",
    "Description":""
]

breed(b) ::= <<
breed <b.id> from <typeMap.(b.type)>
    <propMap.keys:{prop | <if(b.(prop))>set Self.<prop> to <value(b,prop)><endif>}>
    <variables(b)>
    <b.runBlocks.keys:{r | <b.runBlockTexts.(r)><\n>}>
end<\n><\n>
>>

variables(b) ::= <<
variables
    <b.variables.values:{v | <v.name> is <v.type.name> <if(v.realValue)>withvalue <value(v, "realValue")><else><\n><endif>}>
end<\n>
>>

value(b,prop) ::= <<
<if(b.(prop).id)>$<b.(prop).id>
<elseif(b.(prop).length)>"<b.(prop)>"
<else><b.(prop)>
<endif>
>>

region(r,w) ::= <<
region <r.id> <r.width>, <r.height>
    tile size <r.tileWidth>, <r.tileHeight>
    tiles
        <r.tiles:tileArray()>
    end

    <r.instances:instance(w)>
end<\n><\n>
>>

tileArray(ts) ::= <<
    [<trunc(ts):{t | $<t.id>, }; null="null, "> <if(last(ts))>$<last(ts).id><else>null<endif>]<\n>
>>

instance(i,w) ::= <<
instance <if(!i.isIdGenerated)><i.id> <endif>of <i.breed.id> at <i.position.X>, <i.position.Y><\n>
>>

player(p) ::= <<
player <p.id>
>>